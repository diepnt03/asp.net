@model OnTapTX2.Models.Trangsuc

@{
    ViewBag.Title = "Edit";
    var path = "~/Content/Images/" + Model.Anh;

}

<h2>Edit</h2>


@using (Html.BeginForm("Suadulieu", "Objects", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Trangsuc</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.MaTs)

    <div class="form-group">
        @Html.LabelFor(model => model.TenTs, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TenTs, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TenTs, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.Anh)
    <div class="form-group">
        @Html.LabelFor(model => model.Anh, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <img id="output" class="img-rounded" alt="Ảnh sản phẩm" width="180" src="@Url.Content(@path)" />
            <p><label for="ufile" style="cursor: pointer">Chọn file ảnh</label></p>
            <input name="AnhFile" id="ufile" type="file" style="display: none" onchange="loadFile(event)" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mota, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mota, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Mota, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Soluong, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Soluong, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Soluong, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Giatien, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Giatien, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Giatien, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaDanhmuc, "MaDanhmuc", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MaDanhmuc", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaDanhmuc, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

@if (ViewBag.Error != null)
{
    <br />
    <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
}

<div>
    @Html.ActionLink("Back to List", "Xemdanhsach")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    var loadFile = function (event) {
        var image = document.getElementById("output");
        image.src = URL.createObjectURL(event.target.files[0]);
    }
</script>
